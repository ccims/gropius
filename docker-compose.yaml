name: gropius-production
services:
  neo4j:
    image: ghcr.io/graphglue/neo4j:main
    restart: unless-stopped
    volumes:
      - neo4j-conf:/conf
      - neo4j-data:/data
      - neo4j-import:/import
      - neo4j-logs:/logs
    environment:
      - NEO4J_server_memory_pagecache_size=1G
      - NEO4J_server_memory_heap_initial__size=1G
      - NEO4J_server_memory_heap_max__size=1G
      - NEO4J_AUTH=neo4j/TodoNeo4jPassword
      - NEO4J_dbms_directories_run=/run
    healthcheck:
      test: wget -qO - http://localhost:7474 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s
  api-public:
    restart: unless-stopped
    build:
      context: ./gropius-backend
      args:
        module: api-public
    depends_on:
      neo4j:
        condition: service_healthy
    ports:
      - 8080:8080
    environment:
      - SPRING_NEO4J_URI=bolt://neo4j:7687
      - SPRING_NEO4J_AUTHENTICATION_USERNAME=neo4j
      - SPRING_NEO4J_AUTHENTICATION_PASSWORD=TodoNeo4jPassword
      - GROPIUS_API_PUBLIC_JWT_SECRET=TodoLongEnoughAndSecureJwtSecretWithAtLeast256Bit
      - LOGGING_LEVEL_IO_GITHUB_GRAPHGLUE=WARN
      - GRAPHGLUE_CORE_USE_NEO4J_PLUGIN=true
    healthcheck:
      test: wget -qO - http://localhost:8080/graphiql || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s
  api-internal:
    restart: unless-stopped
    build:
      context: ./gropius-backend
      args:
        module: api-internal
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - SPRING_NEO4J_URI=bolt://neo4j:7687
      - SPRING_NEO4J_AUTHENTICATION_USERNAME=neo4j
      - SPRING_NEO4J_AUTHENTICATION_PASSWORD=TodoNeo4jPassword
      - GROPIUS_API_INTERNAL_API_TOKEN=TodoInternalApiToken
      - LOGGING_LEVEL_IO_GITHUB_GRAPHGLUE=WARN
      - GROPIUS_CORE_CREATE_INDICES_ON_STARTUP=false
      - GRAPHGLUE_CORE_USE_NEO4J_PLUGIN=true
    healthcheck:
      test: wget -qO - http://localhost:8080/graphiql || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s
  postgres:
    image: postgres:14
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=TodoPostgresPassword
      - POSTGRES_DB=gropius
  login-service:
    restart: unless-stopped
    build:
      context: ./gropius-backend/login-service
      dockerfile: ../../production-container/Dockerfile-nestjs
    command: /bin/sh -c "npx typeorm migration:run -d dist/migrationDataSource.config.js && sleep 10 && node dist/main.js"
    depends_on:
      api-internal:
        condition: service_healthy
      postgres:
        condition: service_started
    ports:
      - 3000:3000
    environment:
      - GROPIUS_OAUTH_JWT_SECRET=TodoLongEnoughAndSecureJwtSecretWithAtLeast256Bit
      - GROPIUS_LOGIN_SPECIFIC_JWT_SECRET=TodoLoginSpecificLongEnoughAndSecureJwtSecretWithAtLeast256Bit
      - GROPIUS_INTERNAL_BACKEND_ENDPOINT=http://api-internal:8080/graphql
      - GROPIUS_INTERNAL_BACKEND_TOKEN=TodoInternalApiToken
      - GROPIUS_ACCESS_TOKEN_EXPIRATION_TIME_MS=600000
      - GROPIUS_LOGIN_DATABASE_HOST=postgres
      - GROPIUS_LOGIN_DATABASE_PASSWORD=TodoPostgresPassword
      - GROPIUS_LOGIN_SYNC_API_SECRET=TODO_loginSecret
      - GROPIUS_DEFAULT_STRATEGY_INSTANCE_TYPE=userpass
      - GROPIUS_DEFAULT_STRATEGY_INSTANCE_CONFIG={}
      - GROPIUS_DEFAULT_STRATEGY_INSTANCE_NAME=userpass-local
      - GROPIUS_DEFAULT_USER_USERNAME=admin
      - GROPIUS_DEFAULT_USER_DISPLAYNAME=System-Admin
      - 'GROPIUS_DEFAULT_USER_POST_DATA={"password": "admin"}'
      - GROPIUS_DEFAULT_USER_STRATEGY_INSTANCE_NAME=userpass-local
      - GROPIUS_ENDPOINT=http://localhost:4200
      - GROPIUS_LOGIN_SERVICE_ENDPOINT=http://localhost:4200/auth
  frontend:
    restart: unless-stopped
    build:
      context: gropius-frontend
    ports:
      - "4200:80"
    depends_on:
      api-public:
        condition: service_healthy
      login-service:
        condition: service_started
    environment:
      - LOGIN_OAUTH_CLIENT_ID=8ee1287d-71ff-4c85-becd-cba829f390a0
      - API_PUBLIC_ENDPOINT=http://api-public:8080/graphql
      - LOGIN_SERVICE_ENDPOINT=http://login-service:3000
  mongo:
    image: mongo
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: TODO_mongo_password
  github:
    build:
      context: ./gropius-backend
      args:
        module: github
    depends_on:
      - neo4j
      - mongo
      - login-service
    environment:
      - SPRING_NEO4J_URI=bolt://neo4j:7687
      - SPRING_NEO4J_AUTHENTICATION_USERNAME=neo4j
      - SPRING_NEO4J_AUTHENTICATION_PASSWORD=TodoNeo4jPassword
      - SPRING_DATA_MONGODB_HOST=mongo
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=gropius
      - SPRING_DATA_MONGODB_USERNAME=root
      - SPRING_DATA_MONGODB_PASSWORD=TODO_mongo_password
      - GROPIUS_SYNC_LOGIN_SERVICE_BASE=http://login-service:3000/
      - GROPIUS_SYNC_API_SECRET=TODO_loginSecret
  jira:
    build:
      context: ./gropius-backend
      args:
        module: jira
    depends_on:
      - neo4j
      - mongo
      - login-service
    environment:
      - SPRING_NEO4J_URI=bolt://neo4j:7687
      - SPRING_NEO4J_AUTHENTICATION_USERNAME=neo4j
      - SPRING_NEO4J_AUTHENTICATION_PASSWORD=TodoNeo4jPassword
      - SPRING_DATA_MONGODB_HOST=mongo
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=gropius
      - SPRING_DATA_MONGODB_USERNAME=root
      - SPRING_DATA_MONGODB_PASSWORD=TODO_mongo_password
      - GROPIUS_SYNC_LOGIN_SERVICE_BASE=http://login-service:3000/
      - GROPIUS_SYNC_API_SECRET=TODO_loginSecret

volumes:
  neo4j-conf:
  neo4j-data:
  neo4j-import:
  neo4j-logs:
  neo4j-plugins:
  postgres-data:
  mongo-data:
  mongo-config: